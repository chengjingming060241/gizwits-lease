# 指定读取配置文件: dev (开发环境), prod (生产环境), qa (测试环境)
spring:
  profiles:
    active: dev

  redis:
    database: 0
    host: localhost
    port: 6379
    password:
    pool:
      max-active: 8     # 连接池最大连接数（使用负值表示没有限制）
      max-idle: 8       # 连接池中的最大空闲连接
      max-wait: -1      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      min-idle: 0       # 连接池中的最小空闲连接
    timeout: 0        # 连接超时时间（毫秒）
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss #纠正推送到前端的时间相关的json数据格式。如果不知道，其时间格式为lang 毫秒数。
    time-zone: GMT+8
# ================== 开发环境 ================================

---
spring:
  http:
    multipart:
      enabled: true
      max-file-size: 50MB
---
spring:
      profiles: dev
      datasource:
               type: com.alibaba.druid.pool.DruidDataSource
               driverClassName: com.mysql.jdbc.Driver
               url:  jdbc:mysql://116.62.4.120:3306/qinerkang?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
              # url:  jdbc:mysql://localhost:3306/gizwits_lease?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
               username: root
               password: charge@2017
#应用端口配置
server:
     port: 8090

# ================== 容器测试环境 ================================
---
spring:
  profiles: docker-qa
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://mysql:3306/gizwits_lease?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
  redis:
    database: 0
    host: redis
    port: 6379
    password:
    pool:
      max-active: 8     # 连接池最大连接数（使用负值表示没有限制）
      max-idle: 8       # 连接池中的最大空闲连接
      max-wait: -1      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      min-idle: 0       # 连接池中的最小空闲连接
    timeout: 0        # 连接超时时间（毫秒）

# 应用端口配置
server:
  port: 8080

# ================== 测试环境 ================================
---
spring:
      profiles: qa
      datasource:
                type: com.alibaba.druid.pool.DruidDataSource
                driverClassName: com.mysql.jdbc.Driver
                url:  jdbc:mysql://119.29.216.25:3306/gizwits_lease?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
                username: lease
                password: ^gizwits-lease-admin$
# 应用端口配置
server:
     port: 8080

# ================== 生产环境 ================================
---
spring:
      profiles: prod
      redis:
         password: qeksidnfa2018s
      datasource:
                type: com.alibaba.druid.pool.DruidDataSource
                driverClassName: com.mysql.jdbc.Driver
                url:  jdbc:mysql://127.0.0.1:3306/gizwits_lease?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
                username: root
                password: greenway
                sql-script-encoding: utf-8  #指定SQL scripts编码
                initialize: true  #是不是要初始化这些数据库文件
                continueOnError: false #有了错误是否继续运行

                initialSize: 5
                minIdle: 5
                maxActive: 5
                maxWait: 60000                                              # 配置获取连接等待超时的时间
                timeBetweenEvictionRunsMillis: 60000                        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
                minEvictableIdleTimeMillis: 300000                          # 配置一个连接在池中最小生存的时间，单位是毫秒
                testWhileIdle: true
                testOnBorrow: false
                testOnReturn: false
                poolPreparedStatements: true                                 # 打开PSCache
                maxPoolPreparedStatementPerConnectionSize: 20                #指定每个连接上PSCache的大小
                filters: stat,wall,log4j
                connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
                 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
                #useGlobalDataSourceStat: true                                 # 合并多个DruidDataSource的监控数据
#应用端口配置
server:
     port: 8080

#========Mybatis-plus配置==========
---
mybatis-plus:
 mapper-locations: classpath*:/mapper/*Mapper.xml
 #实体扫描，多个package用逗号或者分号分隔
 typeAliasesPackage: com.gizwits.lease.*.entity
 global-config:
   #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
   id-type: 2
   #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
   field-strategy: 2
   auto-set-db-type: true
   db-column-underline: true
   refresh-mapper: true
   # 逻辑删除配置
   sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
   logic-delete-value: 1
   logic-not-delete-value: 0

 configuration:
   map-underscore-to-camel-case: true
   cache-enabled: false




#关闭微服务
endpoints:
  shutdown:
    enabled: true
    sensitive: false


#==========swagger2接口信息配置=======
gizwits:
    boot:
      apiInfo:
           title: 机智云商用租赁 REST API
           description: PC & APP API Document
           version: 1.0.0
           termsOfServiceUrl:
           contact:
                name: Business Products Deparment
                url: http://www.gizwits.com
                email: hlzhao@gizwits.com
           license:
           licenseUrl:
           pathsRegex: ^.*(?<!error)$
      accessTokenExpiration: 180

 #     authUrl: /app/wxPay/order,/app/wxPay/wxPayNotify,/app/wx/weixin,/app/wx/init,/sys/sysUser/messageAuthenticationCode,/sys/sysUser/forgetPassword,/device/deviceAlarm/appList,/order/orderBase/appList,/order/orderBase/list

      authUrl: /app/wxPay/order,/app/wxPay/wxPayNotify,/app/wx/weixin,/app/wx/init,/sys/sysUser/messageAuthenticationCode,/sys/sysUser/forgetPassword,/user/messageCode







